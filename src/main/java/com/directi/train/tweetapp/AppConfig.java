package com.directi.train.tweetapp;

import org.apache.commons.dbcp.BasicDataSource;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.jdbc.core.simple.SimpleJdbcTemplate;

@Configuration
public class AppConfig {
    @Bean
    public SimpleJdbcTemplate simpleJdbcTemplate() {
        BasicDataSource dataSource = new BasicDataSource();
        dataSource.setUrl("jdbc:hsqldb:mem:miniTwitter");
        dataSource.setDriverClassName("org.hsqldb.jdbcDriver");
        SimpleJdbcTemplate db = new SimpleJdbcTemplate(dataSource);
        db.update("CREATE TABLE feeds (" +
                "id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY," +
                "user_id INTEGER DEFAULT '0' NOT NULL," +
                "receiver_id INTEGER DEFAULT '0' NOT NULL," +
                "tweet varchar(128) DEFAULT '!' NOT NULL" +
                ")");
        db.update("CREATE TABLE users (" +
                "id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY," +
                "username varchar(128) NOT NULL," +
                "email varchar(128) NOT NULL," +
                "password varchar(128) NOT NULL" +
                ")");
        db.update("CREATE TABLE followers (" +
                "id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY," +
                "user_id INTEGER NOT NULL," +
                "follower_id INTEGER NOT NULL," +
                ")");
        db.update("CREATE TABLE following (" +
                "id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY," +
                "user_id INTEGER NOT NULL," +
                "following_id INTEGER NOT NULL," +
                ")");

        return db;
    }

    @Bean
    public ThreadLocal<Long> userID() {
        return new ThreadLocal<Long>();
    }
}
